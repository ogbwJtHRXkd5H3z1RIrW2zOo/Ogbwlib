/** * \file digitalIO.h * \brief Ce fichier décrit les fonction des entrées-sorties numériques de dsPIC * \todo change notification, les opendrain * \author ogbwJtHRXkd5H3z1RIrW2zOo */#ifndef __DIGITALIO_H__#define __DIGITALIO_H__/** \brief Règle la patte RA0 en sortie numérique.	Cette fonction règle la patte RA0 en sortie numérique. Des fonction equivalentes existent pour les autres pattes, et pour les ports entiers.	\warning L'utilisation de ces pattes en sortie digitale doit être compatible avec d'autres réglages, cf wiki    \sa SetRA0AsInput, SetRA0Output, InvRA0Output*/#define SetRA0AsOutput()		(_TRISA0=0)/// @cond UNDOCUMENTED#define SetRA1AsOutput()		(_TRISA1=0)#define SetRA2AsOutput()		(_TRISA2=0)#define SetRA3AsOutput()		(_TRISA3=0)#define SetRA4AsOutput()		(_TRISA4=0)#define SetRB0AsOutput()		(_TRISB0=0)#define SetRB1AsOutput()		(_TRISB1=0)#define SetRB2AsOutput()		(_TRISB2=0)#define SetRB3AsOutput()		(_TRISB3=0)#define SetRB4AsOutput()		(_TRISB4=0)#define SetRB5AsOutput()		(_TRISB5=0)#define SetRB6AsOutput()		(_TRISB6=0)#define SetRB7AsOutput()		(_TRISB7=0)#define SetRB8AsOutput()		(_TRISB8=0)#define SetRB9AsOutput()		(_TRISB9=0)#define SetRB10AsOutput()		(_TRISB10=0)#define SetRB11AsOutput()		(_TRISB11=0)#define SetRB12AsOutput()		(_TRISB12=0)#define SetRB13AsOutput()		(_TRISB13=0)#define SetRB14AsOutput()		(_TRISB14=0)#define SetRB15AsOutput()		(_TRISB15=0)/// @endcond UNDOCUMENTED#define SetRAAsOutput()			(TRISA=0)#define SetRBAsOutput()			(TRISB=0)#define SetRAxAsOutput(x)		(TRISA &= ~(1<<(x)))#define SetRBxAsOutput(x)		(TRISB &= ~(1<<(x)))/** \brief Règle la patte RA0 en entrée numérique.	Cette fonction règle la patte RA0 en entrée numérique. Des fonction équivalentes existent pour les autres pattes, et pour les ports entiers.	\warning L'utilisation de ces pattes en entrée numérique doit être compatible avec d'autres réglages, cf wiki. Seul le réglage analogique/numérique est pris en compte    \sa SetRA0AsOutput, GetRA0Input*/#define SetRA0AsInput()		(_TRISA0=1,_PCFG0=1)/// @cond UNDOCUMENTED#define SetRA1AsInput()		(_TRISA1=1,_PCFG1=1)#define SetRA2AsInput()		(_TRISA2=1)#define SetRA3AsInput()		(_TRISA3=1)#define SetRA4AsInput()		(_TRISA4=1)#define SetRB0AsInput()		(_TRISB0=1,_PCFG2=1)#define SetRB1AsInput()		(_TRISB1=1,_PCFG3=1)#define SetRB2AsInput()		(_TRISB2=1,_PCFG4=1)#define SetRB3AsInput()		(_TRISB3=1,_PCFG5=1)#define SetRB4AsInput()		(_TRISB4=1)#define SetRB5AsInput()		(_TRISB5=1)#define SetRB6AsInput()		(_TRISB6=1)#define SetRB7AsInput()		(_TRISB7=1)#define SetRB8AsInput()		(_TRISB8=1)#define SetRB9AsInput()		(_TRISB9=1)#define SetRB10AsInput()	(_TRISB10=1)#define SetRB11AsInput()	(_TRISB11=1)#define SetRB12AsInput()	(_TRISB12=1)#define SetRB13AsInput()	(_TRISB13=1)#define SetRB14AsInput()	(_TRISB14=1)#define SetRB15AsInput()	(_TRISB15=1)/// @endcond UNDOCUMENTED#define SetRAAsInput()		(TRISA=0xffff,_PCFG0=1,_PCFG1=1)#define SetRBAsInput()		(TRISB=0xffff,_PCFG2=1,_PCFG3=1,_PCFG4=1,_PCFG5=1)#define SetRAxAsInput(x);	{TRISA |= 1<<(x); if((x)<2) AD1PCFGL|=1<<(x);}#define SetRBxAsInput(x);	{TRISB |= 1<<(x); if((x)<4) AD1PCFGL|=4<<(x);}/** \brief Règle la valeur de la patte RA0	Cette fonction règle la valeur de la patte RA0, si elle est en sortie numérique. Des fonction équivalentes existent pour les autres pattes, et pour les ports entiers.	\sa SetRA0AsOutput, GetRA0Input, InvRA0Output*/#define SetRA0Output(val)		(_LATA0=(val))/// @cond UNDOCUMENTED#define SetRA1Output(val)		(_LATA1=(val))#define SetRA2Output(val)		(_LATA2=(val))#define SetRA3Output(val)		(_LATA3=(val))#define SetRA4Output(val)		(_LATA4=(val))#define SetRB0Output(val)		(_LATB0=(val))#define SetRB1Output(val)		(_LATB1=(val))#define SetRB2Output(val)		(_LATB2=(val))#define SetRB3Output(val)		(_LATB3=(val))#define SetRB4Output(val)		(_LATB4=(val))#define SetRB5Output(val)		(_LATB5=(val))#define SetRB6Output(val)		(_LATB6=(val))#define SetRB7Output(val)		(_LATB7=(val))#define SetRB8Output(val)		(_LATB8=(val))#define SetRB9Output(val)		(_LATB9=(val))#define SetRB10Output(val)		(_LATB10=(val))#define SetRB11Output(val)		(_LATB11=(val))#define SetRB12Output(val)		(_LATB12=(val))#define SetRB13Output(val)		(_LATB13=(val))#define SetRB14Output(val)		(_LATB14=(val))#define SetRB15Output(val)		(_LATB15=(val))/// @endcond UNDOCUMENTED#define SetRAOutput(val)		(LATA=(val))#define SetRBOutput(val)		(LATB=(val))/** \brief Inverse la valeur de la patte RA0	Cette fonction inverse la valeur de la patte RA0, si elle est en sortie numérique. Des fonction équivalentes existent pour les autres pattes, et pour les ports entiers.	\sa SetRA0AsOutput, GetRA0Input, SetRA0Output*/#define InvRA0Output()		(_LATA0^=1)/// @cond UNDOCUMENTED#define InvRA1Output()		(_LATA1^=1)#define InvRA2Output()		(_LATA2^=1)#define InvRA3Output()		(_LATA3^=1)#define InvRA4Output()		(_LATA4^=1)#define InvRB0Output()		(_LATB0^=1)#define InvRB1Output()		(_LATB1^=1)#define InvRB2Output()		(_LATB2^=1)#define InvRB3Output()		(_LATB3^=1)#define InvRB4Output()		(_LATB4^=1)#define InvRB5Output()		(_LATB5^=1)#define InvRB6Output()		(_LATB6^=1)#define InvRB7Output()		(_LATB7^=1)#define InvRB8Output()		(_LATB8^=1)#define InvRB9Output()		(_LATB9^=1)#define InvRB10Output()		(_LATB10^=1)#define InvRB11Output()		(_LATB11^=1)#define InvRB12Output()		(_LATB12^=1)#define InvRB13Output()		(_LATB13^=1)#define InvRB14Output()		(_LATB14^=1)#define InvRB15Output()		(_LATB15^=1)/// @endcond UNDOCUMENTED#define InvRAOutput()		(LATA^=0xffff)#define InvRBOutput()		(LATB^=0xffff)/** \brief Renvoie la valeur de la patte RA0	Cette fonction renvoie la valeur de la patte RA0, si elle est en entrée numérique. Des fonction équivalentes existent pour les autres pattes, et pour les ports entiers.	\sa SetRA0AsInput, SetRA0Output*/#define GetRA0Input()		(_RA0)/// @cond UNDOCUMENTED#define GetRA1Input()		(_RA1)#define GetRA2Input()		(_RA2)#define GetRA3Input()		(_RA3)#define GetRA4Input()		(_RA4)#define GetRB0Input()		(_RB0)#define GetRB1Input()		(_RB1)#define GetRB2Input()		(_RB2)#define GetRB3Input()		(_RB3)#define GetRB4Input()		(_RB4)#define GetRB5Input()		(_RB5)#define GetRB6Input()		(_RB6)#define GetRB7Input()		(_RB7)#define GetRB8Input()		(_RB8)#define GetRB9Input()		(_RB9)#define GetRB10Input()		(_RB10)#define GetRB11Input()		(_RB11)#define GetRB12Input()		(_RB12)#define GetRB13Input()		(_RB13)#define GetRB14Input()		(_RB14)#define GetRB15Input()		(_RB15)/// @endcond UNDOCUMENTED#define GetRAInput()		(PORTA)#define GetRBInput()		(PORTB)#endif	//	__DIGITALIO_H__