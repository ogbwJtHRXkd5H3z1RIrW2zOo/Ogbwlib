#ifndef _PPS_H_#define _PPS_H_#define SetRPxAsInput(x)    SetRBxAsInput(x)#define SetRPxAsOutput(x)    SetRBxAsOutput(x)#define PPS_VSS			31					/* Input Pin tied to Vss *//** \brief Assigne une patte remappable en entrée d'un module    Assigne une patte remappable en entrée d'un module.    \param fn Fonction à associer à la patte, les fonctions possibles sont : INT1, INT2, T2CK, T3CK, T4CK, T5CK,    			 IC1, IC2, IC7, IC8, OCFA, FLTA1, FLTA2, QEA1, QEB1, INDX1, QEA2, QEB2, INDX1,    			 U1RX, U1CTS, U2RX, U2CTS, SDI1, SCK1, SS1, SDI2, SCK2, SS2, C1RX    \param pin n° de la patte concernée (x pour la patte RPx) ou PPS_VSS pour la masse    \sa PPSOutput, PPSLock, PPSLock*/#define PPSInput(fn,pin) {\    SetRPxAsInput(pin); \    __builtin_write_OSCCONL(OSCCON & 0xbf); \    _##fn##R = pin; \    __builtin_write_OSCCONL(OSCCON | 0x40); \    }#define PPS_NULL			0b00000				// default port pin#define PPS_C1OUT			0b00001				// Comparator 1 output#define PPS_C2OUT			0b00010				// Comparator 2 output#define PPS_U1TX			0b00011				// UART1 Transmit#define PPS_U1RTS			0b00100				// UART1 Ready To Send#define PPS_U2TX			0b00101				// UART2 Transmit#define PPS_U2RTS			0b00110				// UART2 Ready To Send#define PPS_SDO1			0b00111				// SPI1 Data Output#define PPS_SCK1			0b01000				// SPI1 Clock Output#define PPS_SS1				0b01001				// SPI1 Slave Select Output#define PPS_SDO2			0b01010				// SPI2 Data Output#define PPS_SCK2			0b01011				// SPI2 Clock Output#define PPS_SS2				0b01100				// SPI2 Slave Select Output#define PPS_C1TX			0b10000				// CANTX Output#define PPS_OC1				0b10010				// Output Compare 1#define PPS_OC2				0b10011				// Output Compare 2#define PPS_OC3				0b10100				// Output Compare 3#define PPS_OC4				0b10101				// Output Compare 4#define PPS_UPDN1			0b11010				// QEI1 UPDN Output#define PPS_UPDN2			0b11011				// QE21 UPDN Output#define PPS_BASE_ADDR ((U8*)0x06C0)/** \brief Assigne une patte remappable en sortie d'un module    Assigne une patte remappable en sortie d'un module.    \warning Il faut déverouiller l'écriture du registre avec de pouvoir modifier les associations des ports remappables. Ainsi, l'utilisation classique est :    	\code    	PPSUnLock();    	PPSInput(...,...);    	...    	PPSOutput(...,...);    	...    	PPSLock();    	\endcode    \param fn Fonction à associer à la patte, les options sont NULL, C1OUT, C2OUT, U1TX, U1RTS, SDO1, SCK1, SS1, CANTX, OC1, OC2, OC3, OC4, UPDN1, UPDN2    \param pin numéro de la patte concernée    sa PPSLock, PPSInput, PPSUnlock*/#define PPSOutput(fn,pin)   do {\    SetRPxAsOutput(pin); \    __builtin_write_OSCCONL(OSCCON & 0xbf); \    PPS_BASE_ADDR[pin] = PPS_##fn; \    __builtin_write_OSCCONL(OSCCON | 0x40); \    } while(0)#endif /*_PPS_H_ */